#!/bin/bash

# This script has been heavily modified to support recent changes
# to how pubMLST has named MLST schemes. Ideally, the script would
# be written in Python or some other scripting language given the
# heavy logic involved. But, the idea is still to support running 
# this script with the bare minimum of requirements (e.g., a basic
# linux installation), which may have or may not have python, which may
# or may not be python3. That aside, efforts were made to ensure 
# that all previous scheme names used in earlier version of 
# MLST (<=2.19.0) were maintained. This support will drop in version
# 3.0+ of MLST, where we will support the new pubMLST naming convention
# or some form of it. Acknowledging that some of the elements of the 
# script implementation below are fragile, we have added a fail-safe
# at the end. We double check all the observed schemes against a
# list of expected scheme names. Any missing schemes, which are not inclued in 
# a list of deprecated schemes, will be printed out as a warning to 
# the user (in stderr). Here, deprecated schemes are defined as those
# no longer maintained and made available by their curators.
# If you observe any missing schemes, please 
# file an issue at "https://github.com/tseemann/mlst/issues".
# Thank you.

set -eu

# GET SCRIPT DIRECTORY
# need this to read the current supported schemes list
# and test if all were found in the end

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
SCHEME_LIST=${SCRIPT_DIR}/schemes_list.txt
echo "# $SCHEME_LIST"
OBSERVED_SCHEMES=() # EMPTY ARRAY TO STORE THE OBSERVED SCHEMES

## SCHEMES TO BE IGNORED BECAUSE THEY ARE FUNGII OR PARASITE
IGNORED_SCHEMES=("afumigatus" "blastocystis" "calbicans" "cglabrata" "ckrusei" "ctropicalis" "csinensis" "geotrichum" "kseptempunctata" "sparasitica" "tvaginalis")

skip_profile() {
  if [[ " ${IGNORED_SCHEMES[@]} " =~ " ${PROFILE} " ]]; then
    echo "# Ignoring fungal/parasite scheme: ${PROFILE}"
    continue
  fi
}

# grep options change depending on the
# system
host=$(uname)

if [[ "$host" == "Darwin" ]];
then
  GREP_OPTS="-Eo"
  echo "# Found $host, using $GREP_OPTS"
fi

if [[ "$host" == "Linux" ]];
then
  GREP_OPTS="-Po"
  echo "# Found $host, using $GREP_OPTS"
fi

## get description of scheme
get_description() {
  DESCRIPTION=$(echo "$URL" | sed 's@/profiles_csv@@g'| xargs curl -s | grep ${GREP_OPTS} '"description":.*?[^\\]"')
}

# some schemes that are kept separate in MLST
# have been grouped into a single DB in the new 
# pubMLST REST API scheme, this helps maintain
# backwards compatibility with previous versions
# of MLST (v2.19.0 and backwards)
deconvolute_profile() {
  get_description
  # echo "# $DESCRIPTION - found"
  PROFILE=$(echo $DESCRIPTION | sed -E -e 's/.*:\"(.*) MLST(.*)?\"/\1\2/g' -e 's/[\. ]//g' -e 's/\(/_/g' -e 's/\)//g' | tr A-Z a-z | sed -E 's/\/.*$//g')
}

# this deals with a new scheme not present in previous
# version of MLST (prior to v2.19.0), which has two
# schemes, and one of them has a name with a non-ASCII
# character that needs to be fixed
mgallisepticum_profile() {
  get_description
 # echo "# $DESCRIPTION - found"
  PROFILE=${PROFILE}_$(echo $DESCRIPTION | sed -E 's@.*MLST\#.*\((.*)\)\"@\1@g' | tr A-Z a-z | iconv  -f UTF-8 -t ASCII --unicode-subst="o")
}

# This profile has two schemes, a multihost scheme and 
# another called RIRDC. In the current MLST nomenclature
# these schemes are named pmultocida_multihost and 
# pmultocida_rirdc. Here, we ensure that the new nomenclature
# on the pubMLST REST API remains backwards compatible
pmultocida_profile() {
  get_description
  # echo "# $DESCRIPTION - found"
  PROFILE=${PROFILE}_$(echo $DESCRIPTION | sed -E -e 's@.*:\"(.*) MLST\"@\1@g' -e 's/ple//g' -e 's/ //g' | tr A-Z a-z)
}

## get profile depending on the scheme
## species with more than one scheme are
## abaumannii, ecoli, and leptospira
## this is necessary to maintain backwards 
## compatibility with previous versions of
## MLST 

get_profile () {
  case $PROFILE in
    "abaumannii") 
    # echo "# Abaumanni - found $URL"
    get_description
    case $DESCRIPTION in
      '"description":"MLST (Oxford)"')
       PROFILE="abaumannii"
       ;;
       '"description":"MLST (Pasteur)"')
       PROFILE="abaumannii_2"
       ;;
       *)
       echo "Unknown profile for Abaumanii at $URL"
       exit 1
       ;;
       esac
    # echo "# $PROFILE - found"
    ;;
    'brachyspira')
    deconvolute_profile
    # echo "# $PROFILE - found"
    ;;
    'campylobacter_nonjejuni')
    deconvolute_profile
    # echo "# $PROFILE - found"
    ;;
    "ecoli")
    # echo "# Ecoli - found $URL"
    PROFILE='ecoli_2'
    # echo "# $PROFILE - found"
    ;;
    "ecoli_achtman")
    # echo "# Ecoli Achtman - found $URL"
    PROFILE='ecoli'
    # echo "# $PROFILE - found"
    ;;
    'gallibacterium')
    PROFILE='ganatis'
    ;;
    'helicobacter')
    PROFILE='hpylori'
    ;;
    'kingella')
    PROFILE='kkingae'
    ;;
    'klebsiella')
    PROFILE='kpneumoniae'
    ;;
    "leptospira")
    # echo "# Leptospira - found $URL"
    get_description
    case $DESCRIPTION in
      '"description":"MLST (scheme 1)"')
      PROFILE='leptospira'
      ;;
      '"description":"MLST (scheme 2)"')
      PROFILE='leptospira_2'
      ;;
      '"description":"MLST (scheme 3)"')
      PROFILE='leptospira_3'
      ;;
      *)
      echo "Unknown profile for Leptospira at $URL"
      exit 1
      ;;
      esac
      # echo "# $PROFILE - found"
    ;;
    'listeria')
    PROFILE='lmonocytogenes'
    ;;
    'mabscessus')
    deconvolute_profile
    # echo "# $PROFILE - found"
    ;;
    "mcatarrhalis_achtman")
    PROFILE='mcatarrhalis'
    ;;
    'mgallisepticum')
    mgallisepticum_profile
    # echo "# $PROFILE - found"
    ;;
    'oralstrep')
    deconvolute_profile
    ;;
    'pmultocida')
    pmultocida_profile
    # echo "# $PROFILE - found"
    ;;
    'senterica_achtman')
    PROFILE='senterica'
    ;;
    'staphlugdunensis')
    PROFILE='slugdunensis'
    ;;
    'streptothermophilus')
    # this is from Pasteur BigsDB
     PROFILE='sthermophilus'
    ;;
    'sthermophilus')
    # this is from pubMLST
     PROFILE='sthermophilus_2'
     # echo "# $PROFILE - found"
    ;;
    'vcholerae')
     get_description
     case $DESCRIPTION in
       '"description":"MLST"')
        PROFILE='vcholerae'
       ;;
       '"description":"MLST (O1 and O139)"')
       PROFILE='vcholerae2'
       ;;
       *)
       echo "Unknown profile for Vcholerae at $URL"
       exit 1       
       ;;
       esac
    # echo "# $PROFILE - found"
    ;;
    'ypseudotuberculosis_achtman')
    PROFILE='ypseudotuberculosis'
    ;;
    *)
    #echo "# $PROFILE"
    ;;
    esac
}

OUTDIR=pubmlst
mkdir -p "$OUTDIR"
wget --no-clobber -P "$OUTDIR" http://pubmlst.org/data/dbases.xml

for URL in $(grep '<url>' $OUTDIR/dbases.xml | sed -E 's/<\/?url>//g'); do
  # $URL
  # URL=${URL//<url>}
  # URL=${URL//<\/url>}
  # ${URL: -4}
  if [ ${URL:(-4)} = "_csv" ]; then
    PROFILE=$( echo $URL | sed -E 's/.*pubmlst_(.*)_seqdef.*/\1/g' )
    get_profile
    echo "# $PROFILE "
    skip_profile
    OBSERVED_SCHEMES+=( $PROFILE )
    PROFILEDIR="$OUTDIR/$PROFILE"
    echo "mkdir -p '$PROFILEDIR'"
    echo "(cd '$PROFILEDIR' && echo "$URL" && wget -q '$URL' -O '$PROFILE.txt')"
  elif [ ${URL:(-5)} = "fasta" ]; then
    skip_profile
    LOCUS=$(echo $URL | sed -E -e 's@.*/loci/(.*)/alleles_fasta@\1@g' -e 's/_[[:digit:]]$//g')
    echo "(cd '$PROFILEDIR' && echo "$URL" && wget -q '$URL' -O '$LOCUS.tfa')"
  fi 
done

# delete fungi schemes
# these lines are no longer necessary, as we skip them in the for loop 
# above --- they are deprecated, and are commented out.
# they will be removed in subsequent revisions of this script
# echo rm -frv "$OUTDIR"/{afumigatus,blastocystis,calbicans,cglabrata,ckrusei}
# echo rm -frv "$OUTDIR"/{ctropicalis,csinensis,geotrichum,kseptempunctata,sparasitica,tvaginalis}


>&2 echo "# CHECKING FOR UNOBSERVED SCHEMES..."
# implementing some sort of double check to ensure we are not missing anything
# and warn the user of possible missing schemes

printf "%s\n" "${OBSERVED_SCHEMES[@]}" > ${TMPDIR}/obs_schemes.txt
UNOBSERVED_SCHEMES=$(comm -13 <(sort ${TMPDIR}/obs_schemes.txt) <(sort ${SCHEME_LIST}))

# exit early if nothing else to do
if [[ "x$UNOBSERVED_SCHEMES" == "x" ]];
then
  >&2 echo "# ALL EXPECTED SCHEMES WERE OBSERVED... SUCCESS!"
  exit 0
fi

# list of schemes that have been deprecated for one reason or another
# yersinia --- Pasteur has deprecated the Yersnia MLST scheme. It now only
#              supports the cgMLST scheme (checked 05/April/2021)
DEPRECATED_SCHEMES=('yersinia')

# clean up
rm -f ${TMPDIR}/obs_schemes.txt

# create some colour
YELLOW="\e[33m"
ENDCOLOR="\e[0m"

# print out missing schemes
for scheme in ${UNOBSERVED_SCHEMES};
do
  if [[ " ${DEPRECATED_SCHEMES[@]} " =~ " ${scheme} " ]]; then
      >&2 echo "# ${scheme} WAS NOT OBSERVED BUT IT IS DEPRECATED."
      continue
  fi  
  >2& echo -e "${YELLOW}# WARNING: DID NOT OBSERVED THE SCHEME ${scheme}${ENDCOLOR}"
done

>&2 echo "# DONE."